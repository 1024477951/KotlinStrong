apply plugin: 'com.android.library'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]

    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode 1
        versionName "1.0"
        ndk {//externalNativeBuildDebug
            /** CPU类型
             * armeabiv-v7a: 第7代及以上的ARM处理器;
             * arm64-v8a: 第8代、64位ARM处理器;
             * armeabi: 第5代、第6代的ARM处理器;（平台不支持）
             * mips:一种RISC处理器。（平台不支持）
             * mips64:64位的。（平台不支持）
             * x86: 平板;
             * x86_64:64位的平板
             * */
            boolean isX86 = Boolean.parseBoolean(isX86)
            if (isX86) {
                abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86'
            } else {
                abiFilters 'armeabi-v7a', 'arm64-v8a'
            }
        }
        /**
         * 版本地址
         */
        int networkEnvironment = java.lang.Integer.parseInt(networkEnvironment)
        if (networkEnvironment == 1) {
            buildConfigField 'String', 'baseUrl', "\"https://www.wanandroid.com\""
        } else if (networkEnvironment == 0) {
            buildConfigField 'String', 'baseUrl', "\"https://www.wanandroid.com\""
        }
        buildConfigField 'String', 'articleURL', "\"https://www.wanandroid.com\""
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    dataBinding {
        enabled = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0-alpha4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0-alpha4'

    //Kotlin
    api rootProject.ext.dependencies["kotlin-jdk"]
    api rootProject.ext.dependencies["koin-android"]
    api rootProject.ext.dependencies["koin-extensions"]

    api rootProject.ext.dependencies["koin-coroutines-core"]
    api rootProject.ext.dependencies["koin-coroutines-android"]
    api rootProject.ext.dependencies["koin-viewmodel-ktx"]
    //Google
    api rootProject.ext.dependencies["androidx-constraintlayout"]
    api rootProject.ext.dependencies["androidx-appcompat"]
    api rootProject.ext.dependencies["androidx-recyclerview"]

    api rootProject.ext.dependencies["navigation-fragment"]
    api rootProject.ext.dependencies["navigation-ui"]
    //Util
    api rootProject.ext.dependencies["blankj-utilcodex"]
    //Gradle（一般是使用 annotationProcessor 但这里是kapt）
    api rootProject.ext.dependencies["glide"]
    kapt rootProject.ext.dependencies["glide-compiler"]

    //Retrofit
    api rootProject.ext.dependencies["retrofit"]
    api rootProject.ext.dependencies["converter-gson"]
    api rootProject.ext.dependencies["adapter-rxjava"]
    //Okhttp
    api rootProject.ext.dependencies["okhttp3"]
    api rootProject.ext.dependencies["okhttp3-logging"]
    //Cache
    api rootProject.ext.dependencies["PersistentCookieJar"]
    //SmartRefresh
    api rootProject.ext.dependencies["SmartRefreshLayout"]
    api rootProject.ext.dependencies["SmartRefreshHeader"]
    api rootProject.ext.dependencies["Smart-legacy"]
    //BaseRecyclerViewAdapterHelper
    api rootProject.ext.dependencies["baseAdapterHelper"]
    //Rx
    api rootProject.ext.dependencies["rxandroid"]
    api rootProject.ext.dependencies["rxjava"]
}
