import com.config.Versions

//gradle脚本执行依赖
buildscript {
    repositories {
        google()
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:${Versions.gradle}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${Versions.kotlin}"
        /*
            如果出现这个错误
            Cannot cast object 'com.android.build.gradle.internal.pipeline.TransformTask$2$1@590ffd3a' with class 'com.android.build.gradle.internal.pipeline.TransformTask$2$1' to class 'com.android.build.gradle.internal.pipeline.TransformTask'
            更新aspectjx版本
        */
        //classpath "com.hujiang.aspectjx:gradle-android-plugin-aspectjx:${Versions.aspectjx_plugin}"
        /* zip file is empty：因为 kotlin 和 java 互调时，aspectjx 会重复备份且备份过程不是追加而是覆盖，导致的,参考https://github.com/2017398956/AspectPluginDemo */
        //classpath "com.github.2017398956:AspectPlugin:${Versions.aspectjx_plugin}"
    }
}
//项目依赖
allprojects {
    repositories {
        google()
        // 不能去除jcenter()，debugCompileClasspath
        // Execution failed for task ':app:checkDebugAarMetadata'.
        // Execution failed for task ':app:compileDebugKotlin'
        // Could not resolve all files for configuration ':app:kotlin-extension'
        jcenter()
        mavenCentral()
        //cookie持久化jar包 添加以下语句
        maven { url "https://jitpack.io" }
    }
    buildDir = new File(rootDir, "gradle-build/${path.replaceAll(':', '/')}")
}

def releaseTime() {
    // return new Date().format("yyyy-MM-dd-HH-mm", TimeZone.getTimeZone("GMT+08:00"))
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("GMT+08:00"))
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
